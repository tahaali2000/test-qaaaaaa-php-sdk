<?php

declare(strict_types=1);

/*
 * TestAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace TestAPILib\Controllers;

use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\QueryParam;
use CoreInterfaces\Core\Request\RequestMethod;
use TestAPILib\Exceptions\ApiException;
use TestAPILib\Models\UsersRequest;
use TestAPILib\Models\UsersResponse;
use TestAPILib\Models\UsersResponse1;

class APIController extends BaseController
{
    /**
     * Returns a list of users, optionally filtered by search.
     *
     * @param string|null $search Filter users by search term
     * @param int|null $limit Limit the number of users returned
     *
     * @return UsersResponse[] Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function getusers(?string $search = null, ?int $limit = null): array
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/users')
            ->parameters(QueryParam::init('search', $search), QueryParam::init('limit', $limit));

        $_resHandler = $this->responseHandler()->type(UsersResponse::class, 1);

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Creates a user with default values if not provided.
     *
     * @param UsersRequest $body
     *
     * @return UsersResponse1 Response from the API call
     *
     * @throws ApiException Thrown if API call fails
     */
    public function createanewuser(UsersRequest $body): UsersResponse1
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/users')
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body));

        $_resHandler = $this->responseHandler()->type(UsersResponse1::class);

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
